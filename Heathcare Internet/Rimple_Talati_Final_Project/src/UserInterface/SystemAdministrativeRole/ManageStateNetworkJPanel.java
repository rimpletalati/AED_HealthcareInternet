/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SystemAdministrativeRole;

import Business.Ecosystem;
import Business.Network.NetworkCountries;
import Business.Network.NetworkStates;
import java.awt.CardLayout;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rimple
 */
public class ManageStateNetworkJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageStateNetworkJPanel
     */
    private JPanel userProcessContainer;
    private Ecosystem ecosystem;

    public ManageStateNetworkJPanel(JPanel userProcessContainer, Ecosystem ecosystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        populateCountryComboBox();
        populateCountryComboBoxForState();
    }

    public void populateCountryComboBox() {
        countryJComboBox1.removeAllItems();

        for (NetworkCountries nc : ecosystem.getNetworkListsCountries()) {
            countryJComboBox1.addItem(nc);
        }
    }

    public void populateCountryComboBoxForState() {
        countryJComboBox2.removeAllItems();

        for (NetworkCountries nc : ecosystem.getNetworkListsCountries()) {
            countryJComboBox2.addItem(nc);
        }
    }

    private void populateTable(NetworkCountries networkCountries) {
        DefaultTableModel dtm = (DefaultTableModel) manageStateJTable.getModel();
        dtm.setRowCount(0);
        for (NetworkStates networkState : networkCountries.getNetworkListStates()) {
            Object[] row = new Object[1];
            row[0] = networkState;
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        countryComboJLabel = new javax.swing.JLabel();
        countryJComboBox1 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        manageStateJTable = new javax.swing.JTable();
        stateNameJLabel = new javax.swing.JLabel();
        stateJTextField = new javax.swing.JTextField();
        submitJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        deleteJButton = new javax.swing.JButton();
        headingJLabel = new javax.swing.JLabel();
        countryJLabel1 = new javax.swing.JLabel();
        countryJComboBox2 = new javax.swing.JComboBox();

        countryComboJLabel.setText("Country:");

        countryJComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        countryJComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countryJComboBox1ActionPerformed(evt);
            }
        });

        manageStateJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "State Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(manageStateJTable);

        stateNameJLabel.setText("State Name:");

        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        deleteJButton.setText("Delete");
        deleteJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteJButtonActionPerformed(evt);
            }
        });

        headingJLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        headingJLabel.setText("Manage State");

        countryJLabel1.setText("Country:");

        countryJComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backJButton)
                        .addGap(70, 70, 70)
                        .addComponent(submitJButton)
                        .addGap(91, 91, 91)
                        .addComponent(deleteJButton))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(104, 104, 104)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(stateNameJLabel)
                                .addComponent(countryComboJLabel))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(countryJComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(stateJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(123, 123, 123)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(headingJLabel)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(countryJLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(countryJComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headingJLabel)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(countryJComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(countryJLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(countryComboJLabel)
                    .addComponent(countryJComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stateNameJLabel)
                    .addComponent(stateJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(submitJButton)
                    .addComponent(deleteJButton))
                .addGap(90, 90, 90))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void countryJComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countryJComboBox1ActionPerformed

        NetworkCountries nc = (NetworkCountries) countryJComboBox1.getSelectedItem();
        if (nc != null) {
            populateTable(nc);
        }
    }//GEN-LAST:event_countryJComboBox1ActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed

        String name = stateJTextField.getText().trim();
        if ("".equals(name)) {
            JOptionPane.showMessageDialog(null, "Please do not keep state name empty.");
            return;
        }

        Pattern pattern;
        pattern = Pattern.compile("[a-zA-Z ]+");
        Matcher statename = pattern.matcher(name);
        if (statename.matches()) {
            NetworkCountries nc = (NetworkCountries) countryJComboBox2.getSelectedItem();
            boolean IsStateUnique = nc.checkifStateUnique(name);
            if (IsStateUnique) {
                NetworkStates ns = nc.createAndAddNetworkState();
                ns.setName(name);
            } else {
                JOptionPane.showMessageDialog(null, "This state name already exists.");
            }
            stateJTextField.setText("");
        } else {
            JOptionPane.showMessageDialog(null, "Only alphabets are allowed");
        }

    }//GEN-LAST:event_submitJButtonActionPerformed

    private void deleteJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteJButtonActionPerformed

        int selectedRow = manageStateJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        int selectedValue = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete?", "Warning", JOptionPane.YES_NO_OPTION);

        if (selectedValue == JOptionPane.YES_OPTION) {
            NetworkCountries nc = (NetworkCountries) countryJComboBox1.getSelectedItem();
            NetworkStates ns = (NetworkStates) manageStateJTable.getValueAt(selectedRow, 0);
            nc.deleteNetworkState(ns);

        }
        return;
    }//GEN-LAST:event_deleteJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel countryComboJLabel;
    private javax.swing.JComboBox countryJComboBox1;
    private javax.swing.JComboBox countryJComboBox2;
    private javax.swing.JLabel countryJLabel1;
    private javax.swing.JButton deleteJButton;
    private javax.swing.JLabel headingJLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable manageStateJTable;
    private javax.swing.JTextField stateJTextField;
    private javax.swing.JLabel stateNameJLabel;
    private javax.swing.JButton submitJButton;
    // End of variables declaration//GEN-END:variables
}
