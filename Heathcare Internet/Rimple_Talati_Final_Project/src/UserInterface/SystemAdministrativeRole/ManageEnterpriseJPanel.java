/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SystemAdministrativeRole;

import Business.Ecosystem;
import Business.Enterprise.Enterprise;
import Business.Network.NetworkCities;
import Business.Network.NetworkCountries;
import Business.Network.NetworkStates;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rimple
 */
public class ManageEnterpriseJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageEnterpriseJPanel
     */
    private JPanel userProcessContainer;
    private Ecosystem ecosystem;

    public ManageEnterpriseJPanel(JPanel userProcessContainer, Ecosystem ecosystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        populateCountryComboBox();
        populateCountryComboBoxForState();
    }

    public void populateCountryComboBox() {
        countryJComboBox1.removeAllItems();

        for (NetworkCountries nc : ecosystem.getNetworkListsCountries()) {
            if (nc != null) {
                countryJComboBox1.addItem(nc);
            }
        }
    }

    public void populateStateComboBox(NetworkCountries networkCountries) {
        stateNameJComboBox1.removeAllItems();
        for (NetworkStates ns : networkCountries.getNetworkListStates()) {
            if (ns != null) {
                stateNameJComboBox1.addItem(ns);
            }
        }
    }

    public void populateCityComboBox(NetworkStates networkStates) {
        cityJComboBox1.removeAllItems();
        for (NetworkCities nc : networkStates.getNetworkListCities()) {
            cityJComboBox1.addItem(nc);
        }
    }

    private void populateTable(NetworkCities networkCities) {
        DefaultTableModel model = (DefaultTableModel) enterpriseJTable.getModel();
        model.setRowCount(0);
        for (Enterprise enterprise : networkCities.getEnterpriseDirectory().getEnterpriseList()) {
            Object[] row = new Object[2];
            row[0] = enterprise;
            row[1] = enterprise.getEnterpiseType().getValue();
            model.addRow(row);
        }
    }

    public void populateCountryComboBoxForState() {
        countryJComboBox2.removeAllItems();

        for (NetworkCountries nc : ecosystem.getNetworkListsCountries()) {
            if (nc != null) {
                countryJComboBox2.addItem(nc);
            }
        }
    }

    public void populateStateComboBoxForCity(NetworkCountries networkCountries) {
        stateNamejComboBox2.removeAllItems();
        for (NetworkStates ns : networkCountries.getNetworkListStates()) {
//            for (NetworkCities nc : ns.getNetworkListCities()) {
                if (ns != null) {
                    stateNamejComboBox2.addItem(ns);
//                }
            }
        }
    }

    public void populateCityComboBoxForEnterpriseType(NetworkStates networkStates) {
        cityNameJComboBox2.removeAllItems();
        for (NetworkCities nc : networkStates.getNetworkListCities()) {
            cityNameJComboBox2.addItem(nc);
        }
    }

    public void populateEnterpriseType() {
        enterpriseTypeJComboBox.removeAllItems();
        for (Enterprise.EnterpriseType type : Enterprise.EnterpriseType.values()) {
            enterpriseTypeJComboBox.addItem(type);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        enterpriseJTable = new javax.swing.JTable();
        headingJLabel = new javax.swing.JLabel();
        countryJLabel1 = new javax.swing.JLabel();
        countryJComboBox1 = new javax.swing.JComboBox();
        stateNameJLabel = new javax.swing.JLabel();
        stateNameJComboBox1 = new javax.swing.JComboBox();
        cityJLabel = new javax.swing.JLabel();
        cityJComboBox1 = new javax.swing.JComboBox();
        countryComboJLabel = new javax.swing.JLabel();
        countryJComboBox2 = new javax.swing.JComboBox();
        stateComboJLabel = new javax.swing.JLabel();
        stateNamejComboBox2 = new javax.swing.JComboBox();
        cityComboJLabel = new javax.swing.JLabel();
        cityNameJComboBox2 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        enterpriseTypeJComboBox = new javax.swing.JComboBox();
        nameJTextField = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        submitJButton = new javax.swing.JButton();
        deleteJButton = new javax.swing.JButton();

        enterpriseJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Enterprise Name", "Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(enterpriseJTable);

        headingJLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        headingJLabel.setText("Manage Enterprise");

        countryJLabel1.setText("Country:");

        countryJComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        countryJComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countryJComboBox1ActionPerformed(evt);
            }
        });

        stateNameJLabel.setText("State:");

        stateNameJComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        stateNameJComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateNameJComboBox1ActionPerformed(evt);
            }
        });

        cityJLabel.setText("City:");

        cityJComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cityJComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityJComboBox1ActionPerformed(evt);
            }
        });

        countryComboJLabel.setText("Country:");

        countryJComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        countryJComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countryJComboBox2ActionPerformed(evt);
            }
        });

        stateComboJLabel.setText("State:");

        stateNamejComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        stateNamejComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateNamejComboBox2ActionPerformed(evt);
            }
        });

        cityComboJLabel.setText("City:");

        cityNameJComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityNameJComboBox2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Enterprise Type");

        jLabel3.setText("Name");

        enterpriseTypeJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterpriseTypeJComboBoxActionPerformed(evt);
            }
        });

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        deleteJButton.setText("Delete");
        deleteJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backJButton)
                        .addGap(90, 90, 90)
                        .addComponent(submitJButton)
                        .addGap(100, 100, 100)
                        .addComponent(deleteJButton))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(159, 159, 159)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(headingJLabel)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(countryJLabel1)
                                        .addComponent(stateNameJLabel)
                                        .addComponent(cityJLabel))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(countryJComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(stateNameJComboBox1, 0, 91, Short.MAX_VALUE)
                                        .addComponent(cityJComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(150, 150, 150)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(stateComboJLabel)
                                        .addComponent(countryComboJLabel)
                                        .addComponent(cityComboJLabel))
                                    .addGap(56, 56, 56)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(stateNamejComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(countryJComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cityNameJComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(enterpriseTypeJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(nameJTextField)))))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(68, 68, 68)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(93, 93, 93))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headingJLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(countryJComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(countryJLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stateNameJComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stateNameJLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cityJLabel)
                    .addComponent(cityJComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(countryComboJLabel)
                    .addComponent(countryJComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stateComboJLabel)
                    .addComponent(stateNamejComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityComboJLabel)
                    .addComponent(cityNameJComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(enterpriseTypeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(nameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(submitJButton)
                    .addComponent(deleteJButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void countryJComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countryJComboBox1ActionPerformed

        NetworkCountries nc = (NetworkCountries) countryJComboBox1.getSelectedItem();
        if (nc != null) {
            populateStateComboBox(nc);
        }
    }//GEN-LAST:event_countryJComboBox1ActionPerformed

    private void stateNameJComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateNameJComboBox1ActionPerformed

        NetworkStates ns = (NetworkStates) stateNameJComboBox1.getSelectedItem();
        if (ns != null) {
            populateCityComboBox(ns);
        }
    }//GEN-LAST:event_stateNameJComboBox1ActionPerformed

    private void countryJComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countryJComboBox2ActionPerformed
        NetworkCountries nc = (NetworkCountries) countryJComboBox2.getSelectedItem();
        if (nc != null) {
            populateStateComboBoxForCity(nc);
        }
    }//GEN-LAST:event_countryJComboBox2ActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void cityJComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityJComboBox1ActionPerformed

        NetworkCities nc = (NetworkCities) cityJComboBox1.getSelectedItem();
        if (nc != null) {
            populateTable(nc);
        }
    }//GEN-LAST:event_cityJComboBox1ActionPerformed

    private void stateNamejComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateNamejComboBox2ActionPerformed

        NetworkStates ns = (NetworkStates) stateNamejComboBox2.getSelectedItem();
        if (ns != null) {
            populateCityComboBoxForEnterpriseType(ns);
        }
    }//GEN-LAST:event_stateNamejComboBox2ActionPerformed

    private void cityNameJComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityNameJComboBox2ActionPerformed
        NetworkCities nc = (NetworkCities) cityNameJComboBox2.getSelectedItem();
        if (nc != null) {
            populateEnterpriseType();
        }
    }//GEN-LAST:event_cityNameJComboBox2ActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed

        NetworkCities nc = (NetworkCities) cityNameJComboBox2.getSelectedItem();
        Enterprise.EnterpriseType type = (Enterprise.EnterpriseType) enterpriseTypeJComboBox.getSelectedItem();

        if (nc == null || type == null) {
            JOptionPane.showMessageDialog(null, "invalid input");
            return;
        }

        String name = nameJTextField.getText().trim();
        if ("".equals(name)) {
            JOptionPane.showMessageDialog(null, "Please do not keep Enterprise name empty.");
            return;
        }
        boolean IsEnterpriseNameUnique = nc.getEnterpriseDirectory().checkifEnterpriseTypeUnique(name);
        if (IsEnterpriseNameUnique) {
            Enterprise enterprise = nc.getEnterpriseDirectory().createAndAddEnterprise(name, type);
        } else {
            JOptionPane.showMessageDialog(null, "This enterprise name already exists.");
        }
        nameJTextField.setText("");
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void deleteJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteJButtonActionPerformed

        int selectedRow = enterpriseJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        int selectedValue = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete?", "Warning", JOptionPane.YES_NO_OPTION);

        if (selectedValue == JOptionPane.YES_OPTION) {
            NetworkCities nc = (NetworkCities) cityJComboBox1.getSelectedItem();
            Enterprise e = (Enterprise) enterpriseJTable.getValueAt(selectedRow, 0);
            nc.getEnterpriseDirectory().deleteEnterprise(e);
        }
        return;
    }//GEN-LAST:event_deleteJButtonActionPerformed

    private void enterpriseTypeJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterpriseTypeJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enterpriseTypeJComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel cityComboJLabel;
    private javax.swing.JComboBox cityJComboBox1;
    private javax.swing.JLabel cityJLabel;
    private javax.swing.JComboBox cityNameJComboBox2;
    private javax.swing.JLabel countryComboJLabel;
    private javax.swing.JComboBox countryJComboBox1;
    private javax.swing.JComboBox countryJComboBox2;
    private javax.swing.JLabel countryJLabel1;
    private javax.swing.JButton deleteJButton;
    private javax.swing.JTable enterpriseJTable;
    private javax.swing.JComboBox enterpriseTypeJComboBox;
    private javax.swing.JLabel headingJLabel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JLabel stateComboJLabel;
    private javax.swing.JComboBox stateNameJComboBox1;
    private javax.swing.JLabel stateNameJLabel;
    private javax.swing.JComboBox stateNamejComboBox2;
    private javax.swing.JButton submitJButton;
    // End of variables declaration//GEN-END:variables
}
