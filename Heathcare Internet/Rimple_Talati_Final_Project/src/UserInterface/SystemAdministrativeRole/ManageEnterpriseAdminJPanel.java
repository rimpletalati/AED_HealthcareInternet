/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SystemAdministrativeRole;

import Business.Ecosystem;
import Business.Enterprise.Enterprise;
import Business.Network.NetworkCities;
import Business.Network.NetworkCountries;
import Business.Network.NetworkStates;
import Business.Person.Person;
import Business.Role.AdminRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rimple
 */
public class ManageEnterpriseAdminJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageEnterpriseAdminJPanel
     */
    private JPanel userProcessContainer;
    private Ecosystem ecosystem;

    public ManageEnterpriseAdminJPanel(JPanel userProcessContainer, Ecosystem ecosystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        populateCountryComboBoxForState();
        poptable();
    }

    private void poptable() {
        DefaultTableModel model = (DefaultTableModel) manageTableJTable.getModel();
        model.setRowCount(0);
        for (NetworkCountries networkCountries : ecosystem.getNetworkListsCountries()) {
            for (NetworkStates networkStates : networkCountries.getNetworkListStates()) {
                for (NetworkCities networkCities : networkStates.getNetworkListCities()) {
                    for (Enterprise enterprise : networkCities.getEnterpriseDirectory().getEnterpriseList()) {
                        for (UserAccount ua : enterprise.getUserAccountDirectory().getUserAccountList()) {
                            Object[] row = new Object[8];
                            row[0] = enterprise.getEnterpiseType().getValue();
                            row[1] = enterprise;
                            row[2] = networkCountries.getName();
                            row[3] = networkStates.getName();
                            row[4] = networkCities.getName();
                            row[5] = ua.getPerson().getFirstName() + " " + ua.getPerson().getLastName();
                            row[6] = ua;
                            row[7] = ua.getPassword();

                            model.addRow(row);
                        }
                    }
                }
            }
        }
    }

    public void populateCountryComboBoxForState() {
        countryJComboBox2.removeAllItems();

        for (NetworkCountries nc : ecosystem.getNetworkListsCountries()) {
            countryJComboBox2.addItem(nc);
        }
    }

    public void populateStateComboBoxForCity(NetworkCountries networkCountries) {
        stateNamejComboBox2.removeAllItems();
        for (NetworkStates ns : networkCountries.getNetworkListStates()) {
            stateNamejComboBox2.addItem(ns);
        }
    }

    public void populateCityComboBoxForEnterpriseType(NetworkStates networkStates) {
        cityNameJComboBox2.removeAllItems();
        for (NetworkCities nc : networkStates.getNetworkListCities()) {
            cityNameJComboBox2.addItem(nc);
        }
    }

    public void populateEnterpriseName(NetworkCities networkCities) {
        enterpriseNameJComboBox.removeAllItems();
        for (Enterprise e : networkCities.getEnterpriseDirectory().getEnterpriseList()) {
            enterpriseNameJComboBox.addItem(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headingJLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        manageTableJTable = new javax.swing.JTable();
        cityNameJComboBox2 = new javax.swing.JComboBox();
        countryComboJLabel = new javax.swing.JLabel();
        countryJComboBox2 = new javax.swing.JComboBox();
        stateComboJLabel = new javax.swing.JLabel();
        stateNamejComboBox2 = new javax.swing.JComboBox();
        cityComboJLabel = new javax.swing.JLabel();
        usernameJTextField = new javax.swing.JTextField();
        passwordjTextField = new javax.swing.JTextField();
        firstNameJTextField = new javax.swing.JTextField();
        usernameJLabel = new javax.swing.JLabel();
        passwordJLabel = new javax.swing.JLabel();
        firstNameJLabel = new javax.swing.JLabel();
        submitJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        enterpriseNameJLabel = new javax.swing.JLabel();
        enterpriseNameJComboBox = new javax.swing.JComboBox();
        refreshJButton = new javax.swing.JButton();
        lastNameJLabel = new javax.swing.JLabel();
        lastNameJTextField = new javax.swing.JTextField();
        deleteJButton = new javax.swing.JButton();

        headingJLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        headingJLabel.setText("Manage Enterprise Admin");

        manageTableJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Enterprise Type", "Enterprise Name", "Country", "State", "City", "Name", "Username", "Password"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(manageTableJTable);
        if (manageTableJTable.getColumnModel().getColumnCount() > 0) {
            manageTableJTable.getColumnModel().getColumn(0).setPreferredWidth(120);
            manageTableJTable.getColumnModel().getColumn(1).setPreferredWidth(120);
            manageTableJTable.getColumnModel().getColumn(5).setPreferredWidth(100);
        }

        cityNameJComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cityNameJComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityNameJComboBox2ActionPerformed(evt);
            }
        });

        countryComboJLabel.setText("Country:");

        countryJComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        countryJComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countryJComboBox2ActionPerformed(evt);
            }
        });

        stateComboJLabel.setText("State:");

        stateNamejComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        stateNamejComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateNamejComboBox2ActionPerformed(evt);
            }
        });

        cityComboJLabel.setText("City:");

        usernameJLabel.setText("Username:");

        passwordJLabel.setText("Password:");

        firstNameJLabel.setText("First Name:");

        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        enterpriseNameJLabel.setText("Enterprise Name:");

        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });

        lastNameJLabel.setText("Last Name:");

        deleteJButton.setText("Delete");
        deleteJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(182, 182, 182)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(usernameJLabel)
                                    .addComponent(passwordJLabel)
                                    .addComponent(firstNameJLabel)
                                    .addComponent(cityComboJLabel)
                                    .addComponent(stateComboJLabel)
                                    .addComponent(countryComboJLabel)
                                    .addComponent(enterpriseNameJLabel)
                                    .addComponent(lastNameJLabel)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(backJButton)))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(passwordjTextField)
                                        .addComponent(usernameJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE))
                                    .addComponent(firstNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(submitJButton)
                                    .addComponent(lastNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(93, 93, 93)
                                .addComponent(deleteJButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(stateNamejComboBox2, 0, 143, Short.MAX_VALUE)
                                    .addComponent(cityNameJComboBox2, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(enterpriseNameJComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(140, 140, 140)
                                .addComponent(refreshJButton))
                            .addComponent(countryJComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(205, 205, 205)
                        .addComponent(headingJLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 837, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headingJLabel)
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(countryJComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(countryComboJLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(stateNamejComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stateComboJLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(refreshJButton)))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityNameJComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cityComboJLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterpriseNameJLabel)
                    .addComponent(enterpriseNameJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(usernameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernameJLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordJLabel)
                    .addComponent(passwordjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameJLabel)
                    .addComponent(firstNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastNameJLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitJButton)
                    .addComponent(backJButton)
                    .addComponent(deleteJButton))
                .addGap(39, 39, 39))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cityNameJComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityNameJComboBox2ActionPerformed
        NetworkCities nc = (NetworkCities) cityNameJComboBox2.getSelectedItem();
        if (nc != null) {
            populateEnterpriseName(nc);
        }
    }//GEN-LAST:event_cityNameJComboBox2ActionPerformed

    private void countryJComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countryJComboBox2ActionPerformed
        NetworkCountries nc = (NetworkCountries) countryJComboBox2.getSelectedItem();
        if (nc != null) {
            populateStateComboBoxForCity(nc);
        }
    }//GEN-LAST:event_countryJComboBox2ActionPerformed

    private void stateNamejComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateNamejComboBox2ActionPerformed

        NetworkStates ns = (NetworkStates) stateNamejComboBox2.getSelectedItem();
        if (ns != null) {
            populateCityComboBoxForEnterpriseType(ns);
        }
    }//GEN-LAST:event_stateNamejComboBox2ActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        // TODO add your handling code here:
        Enterprise e = (Enterprise) enterpriseNameJComboBox.getSelectedItem();
        NetworkCities nc = (NetworkCities) cityNameJComboBox2.getSelectedItem();
        String username = usernameJTextField.getText().trim();
        String password = passwordjTextField.getText().trim();
        String firstName = firstNameJTextField.getText().trim();
        String lastName = lastNameJTextField.getText().trim();

        if (nc == null || e == null) {
            JOptionPane.showMessageDialog(null, "invalid input");
            return;
        }
        if (("".equals(username))
                || ("".equals(password))
                || ("".equals(firstName))
                || ("".equals(lastName))) {
            JOptionPane.showMessageDialog(null, "Please do not keep any values empty.");
            return;
        }
        Pattern pattern;
        pattern = Pattern.compile("[a-zA-Z ]+");
        Matcher firstN = pattern.matcher(firstName);
        Matcher lastN = pattern.matcher(lastName);

        if (firstN.matches() && lastN.matches()) {

            boolean IsUserNameUnique = Ecosystem.checkIfUsernameIsUnique(username);
            if (IsUserNameUnique) {
                Person person = e.getPersonDirectory().createPerson(firstName, lastName);
                UserAccount userAccount = e.getUserAccountDirectory().createUserAccount(username, password, person, new AdminRole());
            } else {
                JOptionPane.showMessageDialog(null, "This username name already exists.");
            }
            poptable();
            usernameJTextField.setText("");
            passwordjTextField.setText("");
            firstNameJTextField.setText("");
            lastNameJTextField.setText("");
        } else {
            JOptionPane.showMessageDialog(null, "Only alphabets are allowed for name");
        }
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed

        poptable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void deleteJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteJButtonActionPerformed

        int selectedRow = manageTableJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        int selectedValue = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete?", "Warning", JOptionPane.YES_NO_OPTION);

        if (selectedValue == JOptionPane.YES_OPTION) {
            Enterprise e = (Enterprise) manageTableJTable.getValueAt(selectedRow, 1);
            UserAccount ua = (UserAccount) manageTableJTable.getValueAt(selectedRow, 6);
            e.getPersonDirectory().getPersonList().remove(ua.getPerson());
            e.getUserAccountDirectory().getUserAccountList().remove(ua);
        }
        return;
    }//GEN-LAST:event_deleteJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel cityComboJLabel;
    private javax.swing.JComboBox cityNameJComboBox2;
    private javax.swing.JLabel countryComboJLabel;
    private javax.swing.JComboBox countryJComboBox2;
    private javax.swing.JButton deleteJButton;
    private javax.swing.JComboBox enterpriseNameJComboBox;
    private javax.swing.JLabel enterpriseNameJLabel;
    private javax.swing.JLabel firstNameJLabel;
    private javax.swing.JTextField firstNameJTextField;
    private javax.swing.JLabel headingJLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lastNameJLabel;
    private javax.swing.JTextField lastNameJTextField;
    private javax.swing.JTable manageTableJTable;
    private javax.swing.JLabel passwordJLabel;
    private javax.swing.JTextField passwordjTextField;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JLabel stateComboJLabel;
    private javax.swing.JComboBox stateNamejComboBox2;
    private javax.swing.JButton submitJButton;
    private javax.swing.JLabel usernameJLabel;
    private javax.swing.JTextField usernameJTextField;
    // End of variables declaration//GEN-END:variables
}
