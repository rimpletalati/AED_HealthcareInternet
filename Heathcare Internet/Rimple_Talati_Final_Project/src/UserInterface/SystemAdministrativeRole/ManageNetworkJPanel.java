/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SystemAdministrativeRole;

import Business.Ecosystem;
import Business.Network.NetworkCountries;
import Business.Network.NetworkStates;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Rimple
 */
public class ManageNetworkJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageNetworkJPanel
     */
    private JPanel userProcessContainer;
    private Ecosystem ecosystem;

    public ManageNetworkJPanel(JPanel upc, Ecosystem ecosystem) {
        initComponents();
        this.userProcessContainer = upc;
        this.ecosystem = ecosystem;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        manageCountriesJButton = new javax.swing.JButton();
        manageStatesJButton = new javax.swing.JButton();
        manageCitiesJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        headingJLabel = new javax.swing.JLabel();

        manageCountriesJButton.setText("Manage Countries");
        manageCountriesJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageCountriesJButtonActionPerformed(evt);
            }
        });

        manageStatesJButton.setText("Manage States");
        manageStatesJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageStatesJButtonActionPerformed(evt);
            }
        });

        manageCitiesJButton.setText("Manage Cities");
        manageCitiesJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageCitiesJButtonActionPerformed(evt);
            }
        });

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        headingJLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        headingJLabel.setText("Manage Network");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(headingJLabel)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(manageCitiesJButton)
                                .addComponent(manageStatesJButton)
                                .addComponent(manageCountriesJButton)))))
                .addGap(129, 129, 129))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headingJLabel)
                .addGap(30, 30, 30)
                .addComponent(manageCountriesJButton)
                .addGap(18, 18, 18)
                .addComponent(manageStatesJButton)
                .addGap(18, 18, 18)
                .addComponent(manageCitiesJButton)
                .addGap(41, 41, 41)
                .addComponent(backJButton)
                .addContainerGap(58, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void manageCountriesJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageCountriesJButtonActionPerformed

        ManageCountryNetworkJPanel mcnjp = new ManageCountryNetworkJPanel(userProcessContainer, ecosystem);
        userProcessContainer.add("mcnjp", mcnjp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_manageCountriesJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void manageStatesJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageStatesJButtonActionPerformed
        for (NetworkCountries networkCountries : ecosystem.getNetworkListsCountries()) {
            if (networkCountries != null) {
                ManageStateNetworkJPanel msnjp = new ManageStateNetworkJPanel(userProcessContainer, ecosystem);
                userProcessContainer.add("msnjp", msnjp);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
                return;
            }
        }
        JOptionPane.showMessageDialog(null, "Please add Countries first");

    }//GEN-LAST:event_manageStatesJButtonActionPerformed

    private void manageCitiesJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageCitiesJButtonActionPerformed
        for (NetworkCountries networkCountries : ecosystem.getNetworkListsCountries()) {
            for (NetworkStates ns : networkCountries.getNetworkListStates()) {
                if (ns != null) {
                    ManageCityNetworkJPanel mcjp = new ManageCityNetworkJPanel(userProcessContainer, ecosystem);
                    userProcessContainer.add("mcjp", mcjp);
                    CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                    layout.next(userProcessContainer);
                    return;
                }
            }
        }
        JOptionPane.showMessageDialog(null, "Please add States first");
    }//GEN-LAST:event_manageCitiesJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel headingJLabel;
    private javax.swing.JButton manageCitiesJButton;
    private javax.swing.JButton manageCountriesJButton;
    private javax.swing.JButton manageStatesJButton;
    // End of variables declaration//GEN-END:variables
}
