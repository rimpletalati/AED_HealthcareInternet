/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.PharmaceuticalCompanyEmployeeRole;

import Business.Ecosystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.PharmaceuticalCompaniesEnterprise;
import Business.Enterprise.PharmaciesEnterprise;
import Business.Network.NetworkCities;
import Business.Network.NetworkCountries;
import Business.Network.NetworkStates;
import Business.Person.Doctor;
import Business.Person.Patient;
import Business.Person.Person;
import Business.WorkQueue.PharmaceuticalCoNotifyWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rimple
 */
public class SendNotificationJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SendNotificationJPanel
     */
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private Ecosystem ecosystem;
    private String name;

    public SendNotificationJPanel(JPanel userProcessContainer, Enterprise enterprise, Ecosystem ecosystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.ecosystem = ecosystem;
        messageJPanel.setVisible(false);

        populateTable();
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) manageNotificationJTable.getModel();
        model.setRowCount(0);

        for (WorkRequest wr : enterprise.getWorkQueue().getWorkRequestList()) {
            if (wr instanceof PharmaceuticalCoNotifyWorkRequest) {

                PharmaceuticalCoNotifyWorkRequest pcnwr = (PharmaceuticalCoNotifyWorkRequest) wr;
                Object[] row = new Object[2];
                row[0] = pcnwr;
                row[1] = pcnwr.getRequestDate();
                //row[2] = name;
                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headingJLabel = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        messageJPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        messageJTextArea = new javax.swing.JTextArea();
        messageJLabel = new javax.swing.JLabel();
        pharmaciesJCheckBox = new javax.swing.JCheckBox();
        doctorsJCheckBox = new javax.swing.JCheckBox();
        patientsJCheckBox = new javax.swing.JCheckBox();
        submitJButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        manageNotificationJTable = new javax.swing.JTable();
        sendMessageJButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        headingJLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        headingJLabel.setText("Notfication to Networks");

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        messageJTextArea.setColumns(20);
        messageJTextArea.setRows(5);
        jScrollPane1.setViewportView(messageJTextArea);

        messageJLabel.setText("Message:");

        pharmaciesJCheckBox.setText("Pharmacies");
        pharmaciesJCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pharmaciesJCheckBoxActionPerformed(evt);
            }
        });

        doctorsJCheckBox.setText("Doctors");

        patientsJCheckBox.setText("Patients");

        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout messageJPanelLayout = new javax.swing.GroupLayout(messageJPanel);
        messageJPanel.setLayout(messageJPanelLayout);
        messageJPanelLayout.setHorizontalGroup(
            messageJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(messageJPanelLayout.createSequentialGroup()
                .addGroup(messageJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(messageJPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(messageJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(messageJPanelLayout.createSequentialGroup()
                                .addComponent(messageJLabel)
                                .addGap(58, 58, 58)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(messageJPanelLayout.createSequentialGroup()
                                .addComponent(pharmaciesJCheckBox)
                                .addGap(36, 36, 36)
                                .addComponent(doctorsJCheckBox)
                                .addGap(52, 52, 52)
                                .addComponent(patientsJCheckBox))))
                    .addGroup(messageJPanelLayout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(submitJButton)))
                .addGap(101, 101, 101))
        );
        messageJPanelLayout.setVerticalGroup(
            messageJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(messageJPanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(messageJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pharmaciesJCheckBox)
                    .addComponent(doctorsJCheckBox)
                    .addComponent(patientsJCheckBox))
                .addGap(18, 18, 18)
                .addGroup(messageJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(messageJPanelLayout.createSequentialGroup()
                        .addComponent(messageJLabel)
                        .addGap(21, 21, 21))
                    .addGroup(messageJPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(submitJButton)
                        .addContainerGap())))
        );

        manageNotificationJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Message", "Sent Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(manageNotificationJTable);
        if (manageNotificationJTable.getColumnModel().getColumnCount() > 0) {
            manageNotificationJTable.getColumnModel().getColumn(0).setPreferredWidth(150);
        }

        sendMessageJButton.setText("Send New Message");
        sendMessageJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendMessageJButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jButton1)
                .addGap(80, 80, 80))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 614, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(backJButton)
                        .addGap(148, 148, 148)
                        .addComponent(sendMessageJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(225, 225, 225)
                        .addComponent(headingJLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(messageJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(56, 56, 56))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headingJLabel)
                .addGap(22, 22, 22)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(sendMessageJButton))
                    .addComponent(backJButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(messageJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(163, 163, 163))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void sendMessageJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendMessageJButtonActionPerformed
        messageJPanel.setVisible(true);
    }//GEN-LAST:event_sendMessageJButtonActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed

        String message = messageJTextArea.getText();
        if ("".equals(message)) {
            JOptionPane.showMessageDialog(null, "Please write a message");
            return;
        }
        if(!(pharmaciesJCheckBox.isSelected()) && !(patientsJCheckBox.isSelected()) && !(doctorsJCheckBox.isSelected())){
            JOptionPane.showMessageDialog(null,"Select atleast one checkbox");
            return;
        }
        PharmaceuticalCoNotifyWorkRequest pcnwr = new PharmaceuticalCoNotifyWorkRequest();
        pcnwr.setMessage(message);
        pcnwr.setEnterpriseName(enterprise.getName());
        enterprise.getWorkQueue().getWorkRequestList().add(pcnwr);
        for (NetworkCountries networkCountries : ecosystem.getNetworkListsCountries()) {
            for (NetworkStates networkStates : networkCountries.getNetworkListStates()) {
                for (NetworkCities networkCities : networkStates.getNetworkListCities()) {
                    for (Enterprise ent : networkCities.getEnterpriseDirectory().getEnterpriseList()) {
                        if (pharmaciesJCheckBox.isSelected() && ent instanceof PharmaciesEnterprise) {
                            ent.getWorkQueue().getWorkRequestList().add(pcnwr);
                            //name = "Pharmacies";
                        }

                    }
                }
            }
        }

        for (Person p : ecosystem.getAdminAuthority().getPersonDirectory().getPersonList()) {
            if (p instanceof Doctor ){
                if(doctorsJCheckBox.isSelected()){
                    
                Doctor d = (Doctor)p;
                d.getWorkQueue().getWorkRequestList().add(pcnwr);
                //name="Doctors";
                }
            }
            if (p instanceof Patient){
                if(patientsJCheckBox.isSelected()) {
                
                Patient patient = (Patient)p;
                patient.getWorkQueue().getWorkRequestList().add(pcnwr);
                //name="Patients";
                }
            }
        }
        messageJPanel.setVisible(false);
        messageJTextArea.setText("");
        pharmaciesJCheckBox.setSelected(false);
        doctorsJCheckBox.setSelected(false);
        patientsJCheckBox.setSelected(false);
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void pharmaciesJCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pharmaciesJCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pharmaciesJCheckBoxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        populateTable();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JCheckBox doctorsJCheckBox;
    private javax.swing.JLabel headingJLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable manageNotificationJTable;
    private javax.swing.JLabel messageJLabel;
    private javax.swing.JPanel messageJPanel;
    private javax.swing.JTextArea messageJTextArea;
    private javax.swing.JCheckBox patientsJCheckBox;
    private javax.swing.JCheckBox pharmaciesJCheckBox;
    private javax.swing.JButton sendMessageJButton;
    private javax.swing.JButton submitJButton;
    // End of variables declaration//GEN-END:variables
}
