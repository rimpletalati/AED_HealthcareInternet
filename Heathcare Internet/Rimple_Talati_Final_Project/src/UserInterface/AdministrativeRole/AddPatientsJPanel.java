/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AdministrativeRole;

import Business.Ecosystem;
import Business.Enterprise.Enterprise;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.Organization.PatientOrganization;
import Business.Person.Doctor;
import Business.Person.Patient;
import Business.Person.Person;
import Business.Role.PatientRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author Rimple
 */
public class AddPatientsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddPatientsJPanel
     */
    private JPanel userProcessContainer;
    private Ecosystem ecosystem;
    private Enterprise enterprise;
    private Organization organization;

    public AddPatientsJPanel(JPanel userProcessContainer, Ecosystem ecosystem, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.enterprise = enterprise;
        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (org instanceof PatientOrganization) {

                organization = org;
            }
        }
        populatePreferredDoctor();
        dobJDateChooser.getDateEditor().setEnabled(false);
    }

    public void populatePreferredDoctor() {
        preferredDoctorJComboBox.removeAllItems();
        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (org instanceof DoctorOrganization) {

                for (Person p : org.getPersonDirectory().getPersonList()) {
                    if (p instanceof Doctor) {
                        Doctor d = (Doctor) p;
                        preferredDoctorJComboBox.addItem(d);
                    }
                }
            }
        }
    }

    private Boolean check(String ssn) {
        for (Person person : ecosystem.getAdminAuthority().getPersonDirectory().getPersonList()) {
            if (person instanceof Patient) {
                Patient patient = (Patient) person;
                if (patient.getSsn().equals(ssn)) {
                    JOptionPane.showMessageDialog(null, "This SSN already exists for another patient!");
                    return false;
                }
            }
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderbuttonGroup = new javax.swing.ButtonGroup();
        insurancebuttonGroup = new javax.swing.ButtonGroup();
        maritalStatusbuttonGroup = new javax.swing.ButtonGroup();
        headingJLabel = new javax.swing.JLabel();
        dateOfBirthJLabel = new javax.swing.JLabel();
        firstNameJTextField = new javax.swing.JTextField();
        lastNameJTextField = new javax.swing.JTextField();
        genderJLabel = new javax.swing.JLabel();
        maleJRadioButton = new javax.swing.JRadioButton();
        femaleJRadioButton = new javax.swing.JRadioButton();
        dobJDateChooser = new com.toedter.calendar.JDateChooser();
        firstNameJLabel = new javax.swing.JLabel();
        lastNameJLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        countryJLabel = new javax.swing.JLabel();
        cityJLabel = new javax.swing.JLabel();
        countryJTextField = new javax.swing.JTextField();
        zipCodeJLabel = new javax.swing.JLabel();
        cityJTextField = new javax.swing.JTextField();
        zipCodeJTextField = new javax.swing.JTextField();
        homePhoneJLabel = new javax.swing.JLabel();
        homePhoneJTextField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        homeAddressJTextArea = new javax.swing.JTextArea();
        mobilePhoneJLabel = new javax.swing.JLabel();
        mobilePhoneJTextField = new javax.swing.JTextField();
        homeAddressJLabel = new javax.swing.JLabel();
        isInsuranceJLabel = new javax.swing.JLabel();
        ssnJLabel = new javax.swing.JLabel();
        ssnJTextField = new javax.swing.JTextField();
        yesJRadioButton = new javax.swing.JRadioButton();
        noJRadioButton = new javax.swing.JRadioButton();
        insuranceNoJLabel = new javax.swing.JLabel();
        insuranceNumberJTextField = new javax.swing.JTextField();
        insuranceCompanyJLabel = new javax.swing.JLabel();
        insuranceCompanyJTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        allergiesJTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        preferredDoctorJComboBox = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        commentsJTextArea = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        usernameJLabel = new javax.swing.JLabel();
        passwordJLabel = new javax.swing.JLabel();
        passwordJTextField = new javax.swing.JTextField();
        userNameJTextField = new javax.swing.JTextField();
        submitJButton = new javax.swing.JButton();
        singleJRadioButton = new javax.swing.JRadioButton();
        marriedJRadioButton = new javax.swing.JRadioButton();
        backJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        doctorNameJLabel = new javax.swing.JLabel();

        headingJLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        headingJLabel.setText("Add Patients");

        dateOfBirthJLabel.setText("Date Of Birth:");

        genderJLabel.setText("Gender:");

        genderbuttonGroup.add(maleJRadioButton);
        maleJRadioButton.setSelected(true);
        maleJRadioButton.setText("Male");

        genderbuttonGroup.add(femaleJRadioButton);
        femaleJRadioButton.setText("Female");

        firstNameJLabel.setText("First Name:");

        lastNameJLabel.setText("Last Name:");

        jLabel1.setText("Marital Status:");

        countryJLabel.setText("Country:");

        cityJLabel.setText("City:");

        zipCodeJLabel.setText("Postal/Zip code:");

        homePhoneJLabel.setText("Home Phone:");

        homeAddressJTextArea.setColumns(20);
        homeAddressJTextArea.setRows(5);
        jScrollPane2.setViewportView(homeAddressJTextArea);

        mobilePhoneJLabel.setText("Mobile Phone:");

        homeAddressJLabel.setText("Home Address:");

        isInsuranceJLabel.setText("Do you have insurance?");

        ssnJLabel.setText("SSN:");

        insurancebuttonGroup.add(yesJRadioButton);
        yesJRadioButton.setSelected(true);
        yesJRadioButton.setText("Yes");
        yesJRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yesJRadioButtonActionPerformed(evt);
            }
        });

        insurancebuttonGroup.add(noJRadioButton);
        noJRadioButton.setText("No");
        noJRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noJRadioButtonActionPerformed(evt);
            }
        });

        insuranceNoJLabel.setText("Insurance Number:");

        insuranceCompanyJLabel.setText("Insurance Company:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel5.setText("Personal Details:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel6.setText("Insurance Details:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel7.setText("Medical Details:");

        jLabel8.setText("Prefferred Doctor:");

        jLabel9.setText("Any allergies:");

        preferredDoctorJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        preferredDoctorJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                preferredDoctorJComboBoxActionPerformed(evt);
            }
        });

        jLabel10.setText("Comments:");

        commentsJTextArea.setColumns(20);
        commentsJTextArea.setRows(5);
        jScrollPane1.setViewportView(commentsJTextArea);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel11.setText("User Account Details:");

        usernameJLabel.setText("Username:");

        passwordJLabel.setText("Password:");

        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        maritalStatusbuttonGroup.add(singleJRadioButton);
        singleJRadioButton.setSelected(true);
        singleJRadioButton.setText("Single");

        maritalStatusbuttonGroup.add(marriedJRadioButton);
        marriedJRadioButton.setText("Married");

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Doctor Name:");

        doctorNameJLabel.setText("jLabel3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(homeAddressJLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dateOfBirthJLabel)
                                    .addComponent(firstNameJLabel)
                                    .addComponent(jLabel1)
                                    .addComponent(homePhoneJLabel)
                                    .addComponent(mobilePhoneJLabel)
                                    .addComponent(jLabel5))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(homePhoneJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(mobilePhoneJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(firstNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(dobJDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(1, 1, 1)
                                                        .addComponent(insuranceNumberJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(singleJRadioButton)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(marriedJRadioButton)))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(85, 85, 85)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addComponent(lastNameJLabel)
                                                                    .addComponent(genderJLabel)
                                                                    .addComponent(ssnJLabel))
                                                                .addGap(18, 18, 18)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addComponent(ssnJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(lastNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addGroup(layout.createSequentialGroup()
                                                                        .addComponent(maleJRadioButton)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                        .addComponent(femaleJRadioButton))))
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addComponent(cityJLabel)
                                                                .addGap(57, 57, 57)
                                                                .addComponent(cityJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(90, 90, 90)
                                                                .addComponent(countryJLabel)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(countryJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(72, 72, 72)
                                                        .addComponent(zipCodeJLabel)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(zipCodeJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(63, 63, 63)
                                                        .addComponent(insuranceCompanyJLabel)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(insuranceCompanyJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(200, 200, 200)
                                        .addComponent(headingJLabel))))
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(isInsuranceJLabel)
                                .addGap(29, 29, 29)
                                .addComponent(yesJRadioButton)
                                .addGap(18, 18, 18)
                                .addComponent(noJRadioButton))
                            .addComponent(jLabel7)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(insuranceNoJLabel)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(allergiesJTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(preferredDoctorJComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 122, Short.MAX_VALUE))
                                        .addGap(28, 28, 28)
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(doctorNameJLabel))))
                            .addComponent(jLabel11)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(usernameJLabel)
                                    .addComponent(passwordJLabel))
                                .addGap(69, 69, 69)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(userNameJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                                    .addComponent(passwordJTextField)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(backJButton)
                        .addGap(77, 77, 77)
                        .addComponent(submitJButton)))
                .addContainerGap(156, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(headingJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(firstNameJLabel)
                                    .addComponent(firstNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(dateOfBirthJLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(dobJDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(3, 3, 3)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(singleJRadioButton)
                                    .addComponent(marriedJRadioButton)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lastNameJLabel)
                                    .addComponent(lastNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(genderJLabel)
                                    .addComponent(maleJRadioButton)
                                    .addComponent(femaleJRadioButton))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ssnJLabel)
                                    .addComponent(ssnJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(homeAddressJLabel)
                                .addGap(43, 43, 43))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cityJLabel)
                            .addComponent(cityJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(countryJLabel)
                            .addComponent(countryJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(zipCodeJLabel)
                            .addComponent(zipCodeJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(homePhoneJLabel)
                    .addComponent(homePhoneJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mobilePhoneJLabel)
                    .addComponent(mobilePhoneJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(isInsuranceJLabel)
                    .addComponent(yesJRadioButton)
                    .addComponent(noJRadioButton))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insuranceNoJLabel)
                    .addComponent(insuranceNumberJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(insuranceCompanyJLabel)
                    .addComponent(insuranceCompanyJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(preferredDoctorJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(doctorNameJLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(allergiesJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameJLabel)
                    .addComponent(userNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordJLabel)
                    .addComponent(passwordJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(submitJButton)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed

        try {
            String firstName = firstNameJTextField.getText().trim();
            String lastName = lastNameJTextField.getText().trim();
            String homeAddress = homeAddressJTextArea.getText();
            String city = cityJTextField.getText().trim();
            String country = countryJTextField.getText().trim();
            String zipCode = zipCodeJTextField.getText().trim();
            String homePhone = homePhoneJTextField.getText().trim();
            String mobilePhone = mobilePhoneJTextField.getText().trim();
            String ssn = ssnJTextField.getText().trim();
            String insuranceNo = insuranceNumberJTextField.getText().trim();
            String insuranceCompany = insuranceCompanyJTextField.getText().trim();
            String allergies = allergiesJTextField.getText().trim();
            String comments = commentsJTextArea.getText().trim();
            String username = userNameJTextField.getText().trim();
            String password = passwordJTextField.getText().trim();

            String DateFormat = "EEE, MMM d, yyyy";
            SimpleDateFormat sdf = new SimpleDateFormat(DateFormat);
            Date d = dobJDateChooser.getDate();

            Doctor doc = (Doctor) preferredDoctorJComboBox.getSelectedItem();
            if (("".equals(firstName)) || ("".equals(lastName)) || ("".equals(homeAddress)) || ("".equals(city))
                    || ("".equals(country)) || ("".equals(zipCode)) || ("".equals(homePhone)) || ("".equals(mobilePhone))
                    || ("".equals(ssn)) || ("".equals(allergies))
                    || ("".equals(comments)) || ("".equals(username)) || ("".equals(password))
                    || ((JTextField) dobJDateChooser.getDateEditor().getUiComponent()).getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please do not keep any values empty.");
                return;
            }

            String dateOfBirth = sdf.format(d);
            boolean IsUserNameUnique = Ecosystem.checkIfUsernameIsUnique(username);
            if (IsUserNameUnique) {
                Patient patient = new Patient();

                Pattern patternString = Pattern.compile("[a-zA-Z ]+");
                Matcher fname = patternString.matcher(firstName);
                Matcher lname = patternString.matcher(lastName);
                Matcher cityName = patternString.matcher(city);
                Matcher countryName = patternString.matcher(country);

                if (fname.matches() && lname.matches() && cityName.matches() && countryName.matches()) {

                    patient.setFirstName(firstName);
                    patient.setLastName(lastName);
                    patient.setCity(city);
                    patient.setCountry(country);
                } else {
                    JOptionPane.showMessageDialog(null, "only alphabets are allowed for patient name, city, country.");
                    return;
                }
                patient.setDateOfBirth(dateOfBirth);
                if (maleJRadioButton.isSelected()) {
                    patient.setGender("Male");
                } else {
                    patient.setGender("Female");
                }
                if (singleJRadioButton.isSelected()) {
                    patient.setMaritalStatus("Single");
                } else {
                    patient.setMaritalStatus("Married");
                }
                patient.setSsn(ssn);
                patient.setHomeAddress(homeAddress);

                patient.setZipCode(Integer.parseInt(zipCode));

                //regex
                Pattern pattern = Pattern.compile("\\d{10}");
                Matcher homePho = pattern.matcher(homePhoneJTextField.getText());
                Matcher mobilePho = pattern.matcher(mobilePhoneJTextField.getText());
                if ((homePho.matches()) && (mobilePho.matches())) {
                    patient.setHomePhone(Long.parseLong(homePhone));
                    patient.setMobilePhone(Long.parseLong(mobilePhone));
                } else {
                    JOptionPane.showMessageDialog(null, "Phone number not valid. Only 10 numbers are allowed");
                    return;
                }

                if (yesJRadioButton.isSelected()) {
                    patient.setIsInsurance("Yes");

                } else {
                    patient.setIsInsurance("No");

                }
                patient.setInsuranceNo(insuranceNo);
                patient.setInsuranceCompany(insuranceCompany);
                patient.setPreferredDoctor(doc);
                patient.setAllergies(allergies);
                patient.setComments(comments);
                //patient.setPreferredDoctorEnterprise(enterprise);
//                if(check(ssn)==false){
//                    return;
//                }
                boolean flag = check(ssn);
                if (!flag) {
                    return;
                }
                ecosystem.getAdminAuthority().getPersonDirectory().addPerson(patient);
                UserAccount userAccount = ecosystem.getAdminAuthority().getUserAccountDirectory().createUserAccount(username, password, patient, new PatientRole());
                organization.getPersonDirectory().addPerson(patient);
            } else {
                JOptionPane.showMessageDialog(null, "This username name already exists.");
            }
            firstNameJTextField.setText("");
            lastNameJTextField.setText("");
            homeAddressJTextArea.setText("");
            cityJTextField.setText("");
            countryJTextField.setText("");
            zipCodeJTextField.setText("");
            homePhoneJTextField.setText("");
            mobilePhoneJTextField.setText("");
            insuranceNumberJTextField.setText("");
            insuranceCompanyJTextField.setText("");
            ssnJTextField.setText("");
            allergiesJTextField.setText("");
            commentsJTextArea.setText("");
            userNameJTextField.setText("");
            passwordJTextField.setText("");
            ((JTextField) dobJDateChooser.getDateEditor().getUiComponent()).setText("");
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please use numbers for Postal/Zip Code, Home Phone, Mobile Phone");
        }

    }//GEN-LAST:event_submitJButtonActionPerformed

    private void yesJRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesJRadioButtonActionPerformed
        // TODO add your handling code here:
        insuranceNumberJTextField.setEnabled(true);
        insuranceCompanyJTextField.setEnabled(true);
    }//GEN-LAST:event_yesJRadioButtonActionPerformed

    private void noJRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noJRadioButtonActionPerformed
        insuranceNumberJTextField.setEnabled(false);
        insuranceCompanyJTextField.setEnabled(false);
    }//GEN-LAST:event_noJRadioButtonActionPerformed

    private void preferredDoctorJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preferredDoctorJComboBoxActionPerformed
        Doctor d = (Doctor) preferredDoctorJComboBox.getSelectedItem();
        if (d != null) {
            doctorNameJLabel.setText(d.getFirstName() + " " + d.getLastName());
        }
    }//GEN-LAST:event_preferredDoctorJComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField allergiesJTextField;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel cityJLabel;
    private javax.swing.JTextField cityJTextField;
    private javax.swing.JTextArea commentsJTextArea;
    private javax.swing.JLabel countryJLabel;
    private javax.swing.JTextField countryJTextField;
    private javax.swing.JLabel dateOfBirthJLabel;
    private com.toedter.calendar.JDateChooser dobJDateChooser;
    private javax.swing.JLabel doctorNameJLabel;
    private javax.swing.JRadioButton femaleJRadioButton;
    private javax.swing.JLabel firstNameJLabel;
    private javax.swing.JTextField firstNameJTextField;
    private javax.swing.JLabel genderJLabel;
    private javax.swing.ButtonGroup genderbuttonGroup;
    private javax.swing.JLabel headingJLabel;
    private javax.swing.JLabel homeAddressJLabel;
    private javax.swing.JTextArea homeAddressJTextArea;
    private javax.swing.JLabel homePhoneJLabel;
    private javax.swing.JTextField homePhoneJTextField;
    private javax.swing.JLabel insuranceCompanyJLabel;
    private javax.swing.JTextField insuranceCompanyJTextField;
    private javax.swing.JLabel insuranceNoJLabel;
    private javax.swing.JTextField insuranceNumberJTextField;
    private javax.swing.ButtonGroup insurancebuttonGroup;
    private javax.swing.JLabel isInsuranceJLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lastNameJLabel;
    private javax.swing.JTextField lastNameJTextField;
    private javax.swing.JRadioButton maleJRadioButton;
    private javax.swing.ButtonGroup maritalStatusbuttonGroup;
    private javax.swing.JRadioButton marriedJRadioButton;
    private javax.swing.JLabel mobilePhoneJLabel;
    private javax.swing.JTextField mobilePhoneJTextField;
    private javax.swing.JRadioButton noJRadioButton;
    private javax.swing.JLabel passwordJLabel;
    private javax.swing.JTextField passwordJTextField;
    private javax.swing.JComboBox preferredDoctorJComboBox;
    private javax.swing.JRadioButton singleJRadioButton;
    private javax.swing.JLabel ssnJLabel;
    private javax.swing.JTextField ssnJTextField;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTextField userNameJTextField;
    private javax.swing.JLabel usernameJLabel;
    private javax.swing.JRadioButton yesJRadioButton;
    private javax.swing.JLabel zipCodeJLabel;
    private javax.swing.JTextField zipCodeJTextField;
    // End of variables declaration//GEN-END:variables
}
