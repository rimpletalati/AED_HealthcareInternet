/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.LabAssistantRole;

import Business.Enterprise.ClinicEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Organization.LabOrganization;
import Business.Organization.Organization;
import Business.Person.LabAssistant;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rimple
 */
public class LabAssistantWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form LabAssistantWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private LabAssistant labAssistant;
    private LabTestWorkRequest labTestWorkRequest;

    public LabAssistantWorkAreaJPanel(JPanel userProcessContainer, Enterprise enterprise, LabAssistant labAssistant) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.labAssistant = labAssistant;
        populateTable();
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) manageWorkRequetsJTable.getModel();
        model.setRowCount(0);
        if (enterprise instanceof HospitalEnterprise || enterprise instanceof ClinicEnterprise) {
            for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (org instanceof LabOrganization) {
                    for (WorkRequest wr : org.getWorkQueue().getWorkRequestList()) {
                        if (wr instanceof LabTestWorkRequest) {
                            labTestWorkRequest = (LabTestWorkRequest) wr;
//                            Enterprise e = labTestWorkRequest.getSenderEnterprise();
//                            if (e.equals(enterprise)) {
                                Object[] row = new Object[5];
                                row[0] = labTestWorkRequest;
                                row[1] = labTestWorkRequest.getMrNO();
                                row[2] = labTestWorkRequest.getSender();
                                row[3] = labTestWorkRequest.getResolveDate();
                                row[4] = labTestWorkRequest.getStatus();
                                model.addRow(row);
//                            }
                        }
                    }
                }
            }
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headingJLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        manageWorkRequetsJTable = new javax.swing.JTable();
        assignToMeJButton = new javax.swing.JButton();
        processJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();

        headingJLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        headingJLabel.setText("My Work area- lab assistant role");

        manageWorkRequetsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Message", "Patient MR No.", "Doctor Name", "Resolve Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(manageWorkRequetsJTable);
        if (manageWorkRequetsJTable.getColumnModel().getColumnCount() > 0) {
            manageWorkRequetsJTable.getColumnModel().getColumn(4).setPreferredWidth(150);
        }

        assignToMeJButton.setText("Assign to me");
        assignToMeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignToMeJButtonActionPerformed(evt);
            }
        });

        processJButton.setText("Process>>");
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });

        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(assignToMeJButton)
                        .addGap(71, 71, 71)
                        .addComponent(processJButton)
                        .addGap(60, 60, 60)
                        .addComponent(refreshJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(headingJLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(58, 58, 58))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headingJLabel)
                .addGap(44, 44, 44)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assignToMeJButton)
                    .addComponent(processJButton)
                    .addComponent(refreshJButton))
                .addContainerGap(249, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void assignToMeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignToMeJButtonActionPerformed
        
        int selectedRow = manageWorkRequetsJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        LabTestWorkRequest ltwr = (LabTestWorkRequest) manageWorkRequetsJTable.getValueAt(selectedRow, 0);
        ltwr.setReceiver(labAssistant);
        ltwr.setStatus("Assigned");
        populateTable();
    }//GEN-LAST:event_assignToMeJButtonActionPerformed

    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed
        
        int selectedRow = manageWorkRequetsJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        
        LabTestWorkRequest ltwr = (LabTestWorkRequest) manageWorkRequetsJTable.getValueAt(selectedRow, 0);
        if(ltwr.getReceiver()== null){
            JOptionPane.showMessageDialog(null,"You can not process before assigning");
            return;
        }
        ltwr.setStatus("Processing");
        
        ProcessWorkRequestsJPanel processWorkRequestsJPanel = new ProcessWorkRequestsJPanel(userProcessContainer, ltwr);
        userProcessContainer.add("ProcessWorkRequestsJPanel", processWorkRequestsJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_processJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignToMeJButton;
    private javax.swing.JLabel headingJLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable manageWorkRequetsJTable;
    private javax.swing.JButton processJButton;
    private javax.swing.JButton refreshJButton;
    // End of variables declaration//GEN-END:variables
}
