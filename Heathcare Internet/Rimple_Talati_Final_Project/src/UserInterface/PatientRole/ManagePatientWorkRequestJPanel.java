/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.PatientRole;

import Business.Ecosystem;
import Business.Person.Patient;
import Business.WorkQueue.EnterpriseAdminWorkRequest;
import Business.WorkQueue.PatientWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rimple
 */
public class ManagePatientWorkRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManagePatientWorkRequestJPanel
     */
    private JPanel userProcessContainer;
    private Ecosystem ecosystem;
    private Patient patient;

    public ManagePatientWorkRequestJPanel(JPanel userProcessConatiner, Ecosystem ecosystem, Patient patient) {
        initComponents();
        this.userProcessContainer = userProcessConatiner;
        this.ecosystem = ecosystem;
        this.patient = patient;
        populateTable();
        jLabel1.setVisible(false);
        jLabel2.setVisible(false);
        jLabel3.setVisible(false);
        enterpriseNameJTextField.setVisible(false);
        doctorNameJTextField.setVisible(false);
        appointmentDetailsJTextField.setVisible(false);
        doneJButton.setVisible(false);
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) manageRequestsJTable.getModel();
        model.setRowCount(0);

        for (WorkRequest wr : patient.getWorkQueue().getWorkRequestList()) {
            if (wr instanceof EnterpriseAdminWorkRequest) {
                EnterpriseAdminWorkRequest ewr = (EnterpriseAdminWorkRequest) wr;
                Object[] row = new Object[6];
                row[0] = ewr;
                row[1] = ewr.getDoctor().getFirstName() + " " + ewr.getDoctor().getLastName();
                row[2] = ewr.getRequestDate();
                row[3] = ewr.getStatus() == null ? "-" : ewr.getStatus();
                model.addRow(row);

            }
            if (wr instanceof PatientWorkRequest) {
                PatientWorkRequest pwr = (PatientWorkRequest) wr;
                Object[] row = new Object[6];
                row[0] = pwr;
                row[1] = pwr.getDoctor().getFirstName() + " " + pwr.getDoctor().getLastName();
                row[2] = pwr.getRequestDate();
                row[3] = pwr.getStatus() == null ? "-" : pwr.getStatus();
                model.addRow(row);

            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headingJLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        manageRequestsJTable = new javax.swing.JTable();
        addWorkRequestJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        viewDetailsJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        enterpriseNameJTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        doctorNameJTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        appointmentDetailsJTextField = new javax.swing.JTextField();
        doneJButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        headingJLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        headingJLabel.setText("Manage Work Requests");

        manageRequestsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Message", "Doctor Name", "Request Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(manageRequestsJTable);

        addWorkRequestJButton.setText("Add new Work Request");
        addWorkRequestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addWorkRequestJButtonActionPerformed(evt);
            }
        });

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        viewDetailsJButton.setText("View Details");
        viewDetailsJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDetailsJButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Hospital/Clinic Name:");

        enterpriseNameJTextField.setEditable(false);

        jLabel2.setText("Doctor Name:");

        doctorNameJTextField.setEditable(false);

        jLabel3.setText("Appointement Details:");

        appointmentDetailsJTextField.setEditable(false);

        doneJButton.setText("Done");
        doneJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneJButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(389, 389, 389)
                        .addComponent(headingJLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 770, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addComponent(viewDetailsJButton)
                        .addGap(130, 130, 130)
                        .addComponent(addWorkRequestJButton)
                        .addGap(142, 142, 142)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(365, 365, 365)
                        .addComponent(jLabel1)
                        .addGap(33, 33, 33)
                        .addComponent(enterpriseNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(365, 365, 365)
                        .addComponent(jLabel2)
                        .addGap(76, 76, 76)
                        .addComponent(doctorNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(365, 365, 365)
                        .addComponent(jLabel3)
                        .addGap(29, 29, 29)
                        .addComponent(appointmentDetailsJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(466, 466, 466)
                        .addComponent(doneJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(backJButton)))
                .addGap(112, 112, 112))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(headingJLabel)
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addWorkRequestJButton)
                    .addComponent(viewDetailsJButton)
                    .addComponent(jButton1))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel1))
                    .addComponent(enterpriseNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel2))
                    .addComponent(doctorNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel3))
                    .addComponent(appointmentDetailsJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(doneJButton)
                .addGap(87, 87, 87)
                .addComponent(backJButton))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void addWorkRequestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addWorkRequestJButtonActionPerformed
        if (patient.getPreferredDoctorEnterprise() != null) {
            AddPatientWorkRequestForPatJPanel addPatientWorkRequestForPatJPanel = new AddPatientWorkRequestForPatJPanel(userProcessContainer, ecosystem, patient);
            userProcessContainer.add("addPatientWorkRequestForPatJPanel", addPatientWorkRequestForPatJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
        else{
            JOptionPane.showMessageDialog(null,"No Doctor has been assigned");
            return;
        }

    }//GEN-LAST:event_addWorkRequestJButtonActionPerformed

    private void viewDetailsJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDetailsJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = manageRequestsJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        WorkRequest wr = (WorkRequest) manageRequestsJTable.getValueAt(selectedRow, 0);
        if (wr instanceof EnterpriseAdminWorkRequest) {
            JOptionPane.showMessageDialog(null, "Further details not available.");
            return;
        }
        if (wr instanceof PatientWorkRequest) {
            PatientWorkRequest pwd = (PatientWorkRequest) wr;
            jLabel1.setVisible(true);
            jLabel2.setVisible(true);
            jLabel3.setVisible(true);
            enterpriseNameJTextField.setVisible(true);
            doctorNameJTextField.setVisible(true);
            appointmentDetailsJTextField.setVisible(true);
            doneJButton.setVisible(true);
            enterpriseNameJTextField.setText(String.valueOf(pwd.getReceiverEnterprise()));
            doctorNameJTextField.setText(pwd.getDoctor().getFirstName() + " " + pwd.getDoctor().getLastName());
            appointmentDetailsJTextField.setText(pwd.getAppointmentDetails());

        }

    }//GEN-LAST:event_viewDetailsJButtonActionPerformed

    private void doneJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneJButtonActionPerformed
        // TODO add your handling code here:
        jLabel1.setVisible(false);
        jLabel2.setVisible(false);
        jLabel3.setVisible(false);
        enterpriseNameJTextField.setVisible(false);
        doctorNameJTextField.setVisible(false);
        appointmentDetailsJTextField.setVisible(false);
        doneJButton.setVisible(false);

    }//GEN-LAST:event_doneJButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        populateTable();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addWorkRequestJButton;
    private javax.swing.JTextField appointmentDetailsJTextField;
    private javax.swing.JButton backJButton;
    private javax.swing.JTextField doctorNameJTextField;
    private javax.swing.JButton doneJButton;
    private javax.swing.JTextField enterpriseNameJTextField;
    private javax.swing.JLabel headingJLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable manageRequestsJTable;
    private javax.swing.JButton viewDetailsJButton;
    // End of variables declaration//GEN-END:variables
}
