/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AdminBoardOfMedicineRole;

import Business.AdminAuthority;
import Business.Ecosystem;
import Business.Person.Doctor;
import Business.Person.Person;
import Business.Role.DoctorRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rimple
 */
public class ManageDoctorsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageDoctorsJPanel
     */
    private JPanel userProcessContainer;
    private AdminAuthority adminAuthority;
    private Doctor doctor;

    public ManageDoctorsJPanel(JPanel userProcessContainer, AdminAuthority adminAuthority) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.adminAuthority = adminAuthority;
        populateTable();
        dobJDateChooser.getDateEditor().setEnabled(false);
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) manageUserAccountJTable.getModel();
        model.setRowCount(0);
        for (UserAccount ua : adminAuthority.getUserAccountDirectory().getUserAccountList()) {
            if (ua.getPerson() instanceof Doctor) {
                Object[] row = new Object[6];
                doctor = (Doctor) ua.getPerson();
                row[0] = doctor.getFirstName() + " " + doctor.getLastName();

                row[1] = doctor.getLicenseNo();
                row[2] = doctor;
                row[3] = doctor.getSpecialization();
                row[4] = ua.getUsername();
                row[5] = ua.getPassword();

                model.addRow(row);

            }
        }
    }
    private Boolean check(String ssn){
        for(Person p : adminAuthority.getPersonDirectory().getPersonList()){
            if(p instanceof Doctor){
                Doctor d = (Doctor)p;
                if(d.getSsn().equals(ssn)){
                    JOptionPane.showMessageDialog(null, "Doctor with same SSN already exists!");
                    return false;
                }
            }
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        headingJLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        manageUserAccountJTable = new javax.swing.JTable();
        firstNameJLabel = new javax.swing.JLabel();
        lastNameJLabel = new javax.swing.JLabel();
        homeAddressJLabel = new javax.swing.JLabel();
        cityJLabel = new javax.swing.JLabel();
        dateOfBirthJLabel = new javax.swing.JLabel();
        firstNameJTextField = new javax.swing.JTextField();
        lastNameJTextField = new javax.swing.JTextField();
        cityJTextField = new javax.swing.JTextField();
        genderJLabel = new javax.swing.JLabel();
        maleJRadioButton = new javax.swing.JRadioButton();
        femaleJRadioButton = new javax.swing.JRadioButton();
        homePhoneJLabel = new javax.swing.JLabel();
        homePhoneJTextField = new javax.swing.JTextField();
        mobilePhoneJLabel = new javax.swing.JLabel();
        mobilePhoneJTextField = new javax.swing.JTextField();
        licenseNoJLabel = new javax.swing.JLabel();
        licenseNoJTextField = new javax.swing.JTextField();
        subHeadingJLabel = new javax.swing.JLabel();
        usernameJLabel = new javax.swing.JLabel();
        passwordJLabel = new javax.swing.JLabel();
        passwordJTextField = new javax.swing.JTextField();
        userNameJTextField = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        submitJButton = new javax.swing.JButton();
        countryJLabel = new javax.swing.JLabel();
        countryJTextField = new javax.swing.JTextField();
        specializationJLabel = new javax.swing.JLabel();
        specializationJTextField = new javax.swing.JTextField();
        zipCodeJLabel = new javax.swing.JLabel();
        zipCodeJTextField = new javax.swing.JTextField();
        ssnJLabel = new javax.swing.JLabel();
        ssnJTextField = new javax.swing.JTextField();
        dobJDateChooser = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        homeAddressJTextArea = new javax.swing.JTextArea();
        refreshJButton = new javax.swing.JButton();

        headingJLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        headingJLabel.setText("Manage Doctors");

        manageUserAccountJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Licence No.", "SSN", "Specialization", "Username", "Password"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(manageUserAccountJTable);

        firstNameJLabel.setText("First Name:");

        lastNameJLabel.setText("Last Name:");

        homeAddressJLabel.setText("Home Address:");

        cityJLabel.setText("City:");

        dateOfBirthJLabel.setText("Date Of Birth:");

        genderJLabel.setText("Gender:");

        buttonGroup1.add(maleJRadioButton);
        maleJRadioButton.setSelected(true);
        maleJRadioButton.setText("Male");

        buttonGroup1.add(femaleJRadioButton);
        femaleJRadioButton.setText("Female");

        homePhoneJLabel.setText("Home Phone:");

        mobilePhoneJLabel.setText("Mobile Phone:");

        licenseNoJLabel.setText("Licence No.:");

        subHeadingJLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        subHeadingJLabel.setText("User Account Detalis:");

        usernameJLabel.setText("Username:");

        passwordJLabel.setText("Password:");

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        countryJLabel.setText("Country:");

        specializationJLabel.setText("Specialization:");

        zipCodeJLabel.setText("Postal/Zip code:");

        ssnJLabel.setText("SSN:");

        homeAddressJTextArea.setColumns(20);
        homeAddressJTextArea.setRows(5);
        jScrollPane2.setViewportView(homeAddressJTextArea);

        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 713, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(dateOfBirthJLabel)
                                            .addComponent(firstNameJLabel))
                                        .addGap(29, 29, 29)
                                        .addComponent(firstNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(homeAddressJLabel)
                                            .addComponent(homePhoneJLabel)
                                            .addComponent(mobilePhoneJLabel)
                                            .addComponent(licenseNoJLabel)
                                            .addComponent(usernameJLabel)
                                            .addComponent(passwordJLabel)
                                            .addComponent(backJButton))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(31, 31, 31)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(userNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(passwordJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(mobilePhoneJTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(licenseNoJTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE))
                                                    .addComponent(homePhoneJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(dobJDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lastNameJLabel)
                                            .addComponent(genderJLabel)
                                            .addComponent(submitJButton)
                                            .addComponent(cityJLabel)
                                            .addComponent(zipCodeJLabel))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lastNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(maleJRadioButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(femaleJRadioButton))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(zipCodeJTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                                                    .addComponent(cityJTextField, javax.swing.GroupLayout.Alignment.LEADING))
                                                .addGap(63, 63, 63)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(countryJLabel)
                                                    .addComponent(ssnJLabel))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(18, 18, 18)
                                                        .addComponent(ssnJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(countryJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(refreshJButton)
                                                .addGap(46, 46, 46))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addComponent(specializationJLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(specializationJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(subHeadingJLabel))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(313, 313, 313)
                        .addComponent(headingJLabel)))
                .addGap(92, 92, 92))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headingJLabel)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(firstNameJLabel)
                        .addComponent(lastNameJLabel)
                        .addComponent(lastNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(firstNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dateOfBirthJLabel)
                            .addComponent(genderJLabel)
                            .addComponent(maleJRadioButton)
                            .addComponent(femaleJRadioButton))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(homeAddressJLabel)
                            .addComponent(cityJLabel)
                            .addComponent(cityJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(countryJLabel)
                            .addComponent(countryJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(zipCodeJLabel)
                            .addComponent(zipCodeJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(dobJDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(homePhoneJLabel)
                    .addComponent(homePhoneJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mobilePhoneJLabel)
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(licenseNoJLabel)
                            .addComponent(licenseNoJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(specializationJLabel)
                            .addComponent(specializationJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ssnJLabel)
                            .addComponent(ssnJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addComponent(subHeadingJLabel)
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(usernameJLabel)
                            .addComponent(userNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passwordJLabel)
                            .addComponent(passwordJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(backJButton)
                            .addComponent(submitJButton)
                            .addComponent(refreshJButton)))
                    .addComponent(mobilePhoneJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        try {
            String username = userNameJTextField.getText().trim();
            String password = passwordJTextField.getText().trim();
            String firstName = firstNameJTextField.getText().trim();
            String lastName = lastNameJTextField.getText().trim();
            String homeAddress = homeAddressJTextArea.getText();
            String city = cityJTextField.getText().trim();
            String country = countryJTextField.getText().trim();
            String zipCode = zipCodeJTextField.getText().trim();
            String homePhone = homePhoneJTextField.getText().trim();
            String mobilePhone = mobilePhoneJTextField.getText().trim();
            String licenseNo = licenseNoJTextField.getText().trim();
            String specialization = specializationJTextField.getText().trim();
            String ssn = ssnJTextField.getText().trim();

            String DateFormat = "EEE, MMM d, yyyy";
            SimpleDateFormat sdf = new SimpleDateFormat(DateFormat);
            Date d = dobJDateChooser.getDate();

            if (("".equals(username)) || ("".equals(password)) || ("".equals(firstName)) || ("".equals(lastName)) || ("".equals(homeAddress)) || ("".equals(city))
                    || ("".equals(country)) || ("".equals(zipCode)) || ("".equals(homePhone)) || ("".equals(mobilePhone))
                    || ("".equals(licenseNo)) || ("".equals(specialization)) || ("".equals(ssn))
                    || (((JTextField) dobJDateChooser.getDateEditor().getUiComponent()).getText().equals(""))) {

                JOptionPane.showMessageDialog(null, "Please do not keep any values empty.");
                return;
            }
            String dateOfBirth = sdf.format(d);
            boolean IsUserNameUnique = Ecosystem.checkIfUsernameIsUnique(username);
            if (IsUserNameUnique) {
                Doctor doctor = new Doctor();

                Pattern patternString = Pattern.compile("[a-zA-Z ]+");
                Matcher fname = patternString.matcher(firstName);
                Matcher lname = patternString.matcher(lastName);
                Matcher cityName = patternString.matcher(city);
                Matcher countryName = patternString.matcher(country);
                
                if (fname.matches() && lname.matches() && cityName.matches() && countryName.matches()) {
                    doctor.setFirstName(firstName);
                    doctor.setLastName(lastName);
                    doctor.setCity(city);
                    doctor.setCountry(country);
                } else {
                    JOptionPane.showMessageDialog(null, "Only alphabets are allowed for name, city, country.");
                    return;
                }
                doctor.setDateOfBirth(dateOfBirth);

                if (maleJRadioButton.isSelected()) {
                    doctor.setGender("Male");
                } else {
                    doctor.setGender("Female");
                }

                doctor.setHomeAddress(homeAddress);

                doctor.setZipCode(Integer.parseInt(zipCode));

                //regex for phone number
                Pattern pattern = Pattern.compile("\\d{10}");
                Matcher homePho = pattern.matcher(homePhoneJTextField.getText());
                Matcher mobilePho = pattern.matcher(mobilePhoneJTextField.getText());
                if ((homePho.matches()) && (mobilePho.matches())) {
                    doctor.setHomePhone(Long.parseLong(homePhone));
                    doctor.setMobilePhone(Long.parseLong(mobilePhone));
                } else {
                    JOptionPane.showMessageDialog(null, "Phone number not valid. 10 numbers are allowed");
                    return;
                }

                doctor.setHomePhone(Long.parseLong(homePhone));
                doctor.setMobilePhone(Long.parseLong(mobilePhone));
                doctor.setSsn(ssn);
                doctor.setLicenseNo(licenseNo);
                doctor.setSpecialization(specialization);
                boolean flag = check(ssn);
                if(!flag){
                    return;
                }       
                adminAuthority.getPersonDirectory().addPerson(doctor);
                UserAccount userAccount = adminAuthority.getUserAccountDirectory().createUserAccount(username, password, doctor, new DoctorRole());

                populateTable();

            } else {
                JOptionPane.showMessageDialog(null, "This username name already exists.");
            }
            populateTable();
            firstNameJTextField.setText("");
            lastNameJTextField.setText("");
            homeAddressJTextArea.setText("");
            cityJTextField.setText("");
            countryJTextField.setText("");
            zipCodeJTextField.setText("");
            homePhoneJTextField.setText("");
            mobilePhoneJTextField.setText("");
            licenseNoJTextField.setText("");
            specializationJTextField.setText("");
            ssnJTextField.setText("");
            userNameJTextField.setText("");
            passwordJTextField.setText("");
            ((JTextField) dobJDateChooser.getDateEditor().getUiComponent()).setText("");

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please use numbers for Postal/Zip Code, Home Phone, Mobile Phone");
        }
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed

        populateTable();
        firstNameJTextField.setText("");
        lastNameJTextField.setText("");
        homeAddressJTextArea.setText("");
        cityJTextField.setText("");
        countryJTextField.setText("");
        zipCodeJTextField.setText("");
        homePhoneJTextField.setText("");
        mobilePhoneJTextField.setText("");
        licenseNoJTextField.setText("");
        specializationJTextField.setText("");
        ssnJTextField.setText("");
        userNameJTextField.setText("");
        passwordJTextField.setText("");
        ((JTextField) dobJDateChooser.getDateEditor().getUiComponent()).setText("");
    }//GEN-LAST:event_refreshJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel cityJLabel;
    private javax.swing.JTextField cityJTextField;
    private javax.swing.JLabel countryJLabel;
    private javax.swing.JTextField countryJTextField;
    private javax.swing.JLabel dateOfBirthJLabel;
    private com.toedter.calendar.JDateChooser dobJDateChooser;
    private javax.swing.JRadioButton femaleJRadioButton;
    private javax.swing.JLabel firstNameJLabel;
    private javax.swing.JTextField firstNameJTextField;
    private javax.swing.JLabel genderJLabel;
    private javax.swing.JLabel headingJLabel;
    private javax.swing.JLabel homeAddressJLabel;
    private javax.swing.JTextArea homeAddressJTextArea;
    private javax.swing.JLabel homePhoneJLabel;
    private javax.swing.JTextField homePhoneJTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lastNameJLabel;
    private javax.swing.JTextField lastNameJTextField;
    private javax.swing.JLabel licenseNoJLabel;
    private javax.swing.JTextField licenseNoJTextField;
    private javax.swing.JRadioButton maleJRadioButton;
    private javax.swing.JTable manageUserAccountJTable;
    private javax.swing.JLabel mobilePhoneJLabel;
    private javax.swing.JTextField mobilePhoneJTextField;
    private javax.swing.JLabel passwordJLabel;
    private javax.swing.JTextField passwordJTextField;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JLabel specializationJLabel;
    private javax.swing.JTextField specializationJTextField;
    private javax.swing.JLabel ssnJLabel;
    private javax.swing.JTextField ssnJTextField;
    private javax.swing.JLabel subHeadingJLabel;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTextField userNameJTextField;
    private javax.swing.JLabel usernameJLabel;
    private javax.swing.JLabel zipCodeJLabel;
    private javax.swing.JTextField zipCodeJTextField;
    // End of variables declaration//GEN-END:variables
}
