/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DoctorRole;

import Business.Ecosystem;
import Business.Encounter.Encounter;
import Business.Enterprise.ClinicEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Person.Doctor;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rimple
 */
public class ManageLabTestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageLabTestJPanel
     */
    private JPanel userProcessContainer;
    // private Enterprise enterprise;
    private Doctor doctor;
    private Ecosystem ecosystem;

    public ManageLabTestJPanel(JPanel userProcessContainer, Doctor doctor, Ecosystem ecosystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
//        this.enterprise = enterprise;
        this.doctor = doctor;
        this.ecosystem = ecosystem;
        viewLabResultsJPanel.setVisible(false);
        
        populateEnterprise(doctor);
    }

    private void populateEnterprise(Doctor doctor) {
        enterpriseJComboBox.removeAllItems();
        for (Enterprise enterprise : doctor.getEnterpriseList()) {
//            if (enterprise instanceof HospitalEnterprise || enterprise instanceof ClinicEnterprise) {
            enterpriseJComboBox.addItem(enterprise);
//            }
        }
    }

    private void populateTable(Enterprise e) {
        DefaultTableModel model = (DefaultTableModel) manageLabJTable.getModel();
        model.setRowCount(0);
        if (e instanceof HospitalEnterprise){
            HospitalEnterprise he = (HospitalEnterprise) e;
            for(Encounter encounter: he.getEncounterList()){
                if (encounter.getDoctor() == doctor && encounter.getLabTestWorkResquest() != null){
                    Object[] row = new Object[6];
                    row[0] = encounter.getLabTestWorkResquest().getMessage();
                    row[1] = encounter.getPatient().getMrNo();
                    row[2] = encounter.getPatient().getFirstName() + " "+ encounter.getPatient().getLastName();
                    row[3] = encounter.getLabTestWorkResquest().getRequestDate();
                    row[4] = encounter.getLabTestWorkResquest().getStatus();
                    row[5] = encounter;
                    model.addRow(row);
                }
            }
        }
        if (e instanceof ClinicEnterprise){
            ClinicEnterprise ce = (ClinicEnterprise) e;
            for(Encounter encounter: ce.getEncounterList()){
                if (encounter.getDoctor() == doctor && encounter.getLabTestWorkResquest() != null){
                    Object[] row = new Object[6];
                    row[0] = encounter.getLabTestWorkResquest().getMessage();
                    row[1] = encounter.getPatient().getMrNo();
                    row[2] = encounter.getPatient().getFirstName() + " "+ encounter.getPatient().getLastName();
                    row[3] = encounter.getLabTestWorkResquest().getRequestDate();
                    row[4] = encounter.getLabTestWorkResquest().getStatus();
                    row[5] = encounter;
                    model.addRow(row);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headingJLabel = new javax.swing.JLabel();
        enterpriseJLabel = new javax.swing.JLabel();
        enterpriseJComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        enterpriseIDJLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        manageLabJTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        viewLabResultsJButton = new javax.swing.JButton();
        prescribeDrugJButton = new javax.swing.JButton();
        viewLabResultsJPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        labResultsJTextArea = new javax.swing.JTextArea();

        headingJLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        headingJLabel.setText("Manage Lab Tests");

        enterpriseJLabel.setText("Enterprise:");

        enterpriseJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        enterpriseJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterpriseJComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setText("Enterprise ID:");

        enterpriseIDJLabel.setText("jLabel2");

        manageLabJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Message", "MR No.", "Patient Name", "Request Date", "Status", "Encounter ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(manageLabJTable);

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        viewLabResultsJButton.setText("View Lab Results");
        viewLabResultsJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewLabResultsJButtonActionPerformed(evt);
            }
        });

        prescribeDrugJButton.setText("Prescribe drugs to Patients");
        prescribeDrugJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prescribeDrugJButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Lab Results:");

        labResultsJTextArea.setEditable(false);
        labResultsJTextArea.setColumns(20);
        labResultsJTextArea.setRows(5);
        jScrollPane2.setViewportView(labResultsJTextArea);

        javax.swing.GroupLayout viewLabResultsJPanelLayout = new javax.swing.GroupLayout(viewLabResultsJPanel);
        viewLabResultsJPanel.setLayout(viewLabResultsJPanelLayout);
        viewLabResultsJPanelLayout.setHorizontalGroup(
            viewLabResultsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewLabResultsJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        viewLabResultsJPanelLayout.setVerticalGroup(
            viewLabResultsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewLabResultsJPanelLayout.createSequentialGroup()
                .addGroup(viewLabResultsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(viewLabResultsJPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2))
                    .addGroup(viewLabResultsJPanelLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel2)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(enterpriseJLabel)
                        .addGap(46, 46, 46)
                        .addComponent(enterpriseJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(jLabel1)
                        .addGap(29, 29, 29)
                        .addComponent(enterpriseIDJLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(viewLabResultsJButton)
                        .addGap(162, 162, 162)
                        .addComponent(prescribeDrugJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(viewLabResultsJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(232, 232, 232)
                        .addComponent(headingJLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(94, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headingJLabel)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterpriseJLabel)
                    .addComponent(enterpriseJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(enterpriseIDJLabel))
                .addGap(46, 46, 46)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewLabResultsJButton)
                    .addComponent(prescribeDrugJButton))
                .addGap(38, 38, 38)
                .addComponent(viewLabResultsJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(backJButton)
                .addContainerGap(113, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void enterpriseJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterpriseJComboBoxActionPerformed
        Enterprise e = (Enterprise) enterpriseJComboBox.getSelectedItem();
        if (e != null) {
            enterpriseIDJLabel.setText(String.valueOf(e.getOrganizationID()));
            populateTable(e);
            //enterprise = e;
        }
    }//GEN-LAST:event_enterpriseJComboBoxActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void viewLabResultsJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewLabResultsJButtonActionPerformed

        int selectedRow = manageLabJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        Encounter e = (Encounter) manageLabJTable.getValueAt(selectedRow, 5);
        viewLabResultsJPanel.setVisible(true);
        //LabTestWorkRequest ltwr = (LabTestWorkRequest) wr;
        labResultsJTextArea.setText(e.getLabTestWorkResquest().getLabResults());
    }//GEN-LAST:event_viewLabResultsJButtonActionPerformed

    private void prescribeDrugJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prescribeDrugJButtonActionPerformed
        
        int selectedRow = manageLabJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        Encounter encounter = (Encounter) manageLabJTable.getValueAt(selectedRow, 5);
        
        PrescribesDrugsToPateintsJPanel prescribesDrugsToPateintsJPanel = new PrescribesDrugsToPateintsJPanel(userProcessContainer, doctor,ecosystem,encounter );
        userProcessContainer.add("prescribesDrugsToPateintsJPanel", prescribesDrugsToPateintsJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_prescribeDrugJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel enterpriseIDJLabel;
    private javax.swing.JComboBox enterpriseJComboBox;
    private javax.swing.JLabel enterpriseJLabel;
    private javax.swing.JLabel headingJLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea labResultsJTextArea;
    private javax.swing.JTable manageLabJTable;
    private javax.swing.JButton prescribeDrugJButton;
    private javax.swing.JButton viewLabResultsJButton;
    private javax.swing.JPanel viewLabResultsJPanel;
    // End of variables declaration//GEN-END:variables
}
