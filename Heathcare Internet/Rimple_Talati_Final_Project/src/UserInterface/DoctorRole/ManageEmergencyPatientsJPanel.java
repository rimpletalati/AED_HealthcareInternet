/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DoctorRole;

import Business.Encounter.Encounter;
import Business.Enterprise.Enterprise;
import Business.Person.Doctor;
import Business.Person.Patient;
import Business.WorkQueue.EnquireEmergencyWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rimple
 */
public class ManageEmergencyPatientsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageEmergencyPatientsJPanel
     */
    private JPanel userProcessContainer;
    private Doctor doctor;
    private Enterprise enterprise;
    public ManageEmergencyPatientsJPanel(JPanel userProcessContainer, Doctor d) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.doctor = d;
        populateTable();
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) manageTableJTable.getModel();
        model.setRowCount(0);
        for (WorkRequest wr : doctor.getWorkQueue().getWorkRequestList()) {
            if (wr instanceof EnquireEmergencyWorkRequest) {
                EnquireEmergencyWorkRequest aewr = (EnquireEmergencyWorkRequest)wr;

                Object[] row = new Object[3];
                row[0] = aewr;
                row[1] = aewr.getMrNo();
                row[2] = aewr.getEnterprise();
                model.addRow(row);

            }
        }
    }

    private void populateEncounterDetails(EnquireEmergencyWorkRequest eewr) {
        DefaultTableModel model = (DefaultTableModel) manageEncounterJTable.getModel();
        model.setRowCount(0);
        for (Encounter encounter : eewr.getEncounterList()) {
            Object[] row = new Object[2];
            row[0] = encounter;
            row[1] = encounter.getEncounterDate();

            model.addRow(row);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headingJLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        manageTableJTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        viewEncounterJButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        manageEncounterJTable = new javax.swing.JTable();
        viewEncounterDetailsJButton = new javax.swing.JButton();

        headingJLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        headingJLabel.setText("Manage Emergency Patients");

        manageTableJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Message", "Patient MrNo.", "Hospital/Clinic Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(manageTableJTable);

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        viewEncounterJButton.setText("View Encounter");
        viewEncounterJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewEncounterJButtonActionPerformed(evt);
            }
        });

        manageEncounterJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Encounter ID", "Date of Encounter"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(manageEncounterJTable);

        viewEncounterDetailsJButton.setText("View Encounter Details");
        viewEncounterDetailsJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewEncounterDetailsJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(211, 211, 211)
                        .addComponent(headingJLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(255, 255, 255)
                        .addComponent(viewEncounterJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(233, 233, 233)
                        .addComponent(viewEncounterDetailsJButton)))
                .addGap(151, 151, 151))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headingJLabel)
                .addGap(63, 63, 63)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(viewEncounterJButton)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(viewEncounterDetailsJButton)
                .addGap(18, 18, 18)
                .addComponent(backJButton)
                .addContainerGap(220, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void viewEncounterJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewEncounterJButtonActionPerformed
        int selectedRow = manageTableJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        WorkRequest wr = (WorkRequest) manageTableJTable.getValueAt(selectedRow, 0);
        EnquireEmergencyWorkRequest eewr = (EnquireEmergencyWorkRequest) wr;
        populateEncounterDetails(eewr);
    }//GEN-LAST:event_viewEncounterJButtonActionPerformed

    private void viewEncounterDetailsJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewEncounterDetailsJButtonActionPerformed
        int selectedRow = manageEncounterJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        Encounter e = (Encounter) manageEncounterJTable.getValueAt(selectedRow, 0);
        
        ViewEncounterDetailsJPanel viewEncounterDetailsJPanel = new ViewEncounterDetailsJPanel(userProcessContainer, e);
        userProcessContainer.add("viewEncounterDetailsJPanel2", viewEncounterDetailsJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_viewEncounterDetailsJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel headingJLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable manageEncounterJTable;
    private javax.swing.JTable manageTableJTable;
    private javax.swing.JButton viewEncounterDetailsJButton;
    private javax.swing.JButton viewEncounterJButton;
    // End of variables declaration//GEN-END:variables
}
