/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DoctorRole;

import Business.Ecosystem;
import Business.Encounter.Encounter;
import Business.Enterprise.ClinicEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Network.NetworkCities;
import Business.Network.NetworkCountries;
import Business.Network.NetworkStates;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.Person.Doctor;
import Business.Person.Patient;
import Business.Person.Person;
import Business.WorkQueue.ReferredDoctorWorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rimple
 */
public class ReferAnotherDoctorJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ReferAnotherDoctorJPanel
     */
    private JPanel userProcessContainer;
    private Ecosystem ecosystem;
    private Patient patient;
    private Doctor doctor;
    private ArrayList<Encounter> encounterList;
    private Enterprise enterprise;
    private Enterprise receiverEnterprise;
    public ReferAnotherDoctorJPanel(JPanel userProcessConatiner, Ecosystem ecosystem, Patient patient, ArrayList<Encounter> encounterList, Doctor doctor, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessConatiner;
        this.ecosystem = ecosystem;
        this.patient = patient;
        this.encounterList = encounterList;
        this.doctor = doctor;
        this.enterprise = enterprise;
        populateCountryComboBox();
        messageJPanel.setVisible(false);
        
    }

    public void populateCountryComboBox() {
        countryJComboBox1.removeAllItems();

        for (NetworkCountries nc : ecosystem.getNetworkListsCountries()) {
            countryJComboBox1.addItem(nc);
        }
    }

    public void populateStateComboBox(NetworkCountries networkCountries) {
        stateNameJComboBox1.removeAllItems();
        for (NetworkStates ns : networkCountries.getNetworkListStates()) {
            stateNameJComboBox1.addItem(ns);
        }
    }

    public void populateCityComboBox(NetworkStates networkStates) {
        cityJComboBox1.removeAllItems();
        for (NetworkCities nc : networkStates.getNetworkListCities()) {
            cityJComboBox1.addItem(nc);
        }
    }

    private void populateEnterprise(NetworkCities networkCities) {
        enterpriseJComboBox.removeAllItems();
        for (Enterprise e : networkCities.getEnterpriseDirectory().getEnterpriseList()) {
            if (e instanceof HospitalEnterprise || e instanceof ClinicEnterprise){
            enterpriseJComboBox.addItem(e);
            }
        }
    }

    private void populateDoctors(Enterprise enterprise) {
        DefaultTableModel model = (DefaultTableModel) manageDoctorsJTable.getModel();
        model.setRowCount(0);
        if (enterprise instanceof HospitalEnterprise || enterprise instanceof ClinicEnterprise) {
            for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (org instanceof DoctorOrganization) {
                    for (Person p : org.getPersonDirectory().getPersonList()) {
                        Doctor d = (Doctor) p;
                        if(doctor != d){
                        
                        Object[] row = new Object[3];
                        row[0] = d;
                        row[1] = d.getFirstName() + " " + d.getLastName();
                        row[2] = d.getSpecialization();
                        model.addRow(row);
                        }
                    }
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headingJLabel = new javax.swing.JLabel();
        countryJComboBox1 = new javax.swing.JComboBox();
        stateNameJLabel = new javax.swing.JLabel();
        stateNameJComboBox1 = new javax.swing.JComboBox();
        cityJLabel = new javax.swing.JLabel();
        cityJComboBox1 = new javax.swing.JComboBox();
        countryJLabel1 = new javax.swing.JLabel();
        enterpriseJLabel = new javax.swing.JLabel();
        enterpriseJComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        enterpriseIDJLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        manageDoctorsJTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        addJButton = new javax.swing.JButton();
        messageJPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        messageJTextField = new javax.swing.JTextField();
        messageJButton = new javax.swing.JButton();

        headingJLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        headingJLabel.setText("Refer to another Doctor");

        countryJComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        countryJComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countryJComboBox1ActionPerformed(evt);
            }
        });

        stateNameJLabel.setText("State:");

        stateNameJComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        stateNameJComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateNameJComboBox1ActionPerformed(evt);
            }
        });

        cityJLabel.setText("City:");

        cityJComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cityJComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityJComboBox1ActionPerformed(evt);
            }
        });

        countryJLabel1.setText("Country:");

        enterpriseJLabel.setText("Enterprise:");

        enterpriseJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        enterpriseJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterpriseJComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setText("Enterprise ID:");

        enterpriseIDJLabel.setText("jLabel2");

        manageDoctorsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SSN", "Doctor Name", "Specialization"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(manageDoctorsJTable);

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        addJButton.setText("Add");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Message:");

        messageJButton.setText("Send Message");
        messageJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout messageJPanelLayout = new javax.swing.GroupLayout(messageJPanel);
        messageJPanel.setLayout(messageJPanelLayout);
        messageJPanelLayout.setHorizontalGroup(
            messageJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(messageJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(messageJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(messageJPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(messageJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, messageJPanelLayout.createSequentialGroup()
                        .addComponent(messageJButton)
                        .addGap(85, 85, 85))))
        );
        messageJPanelLayout.setVerticalGroup(
            messageJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(messageJPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(messageJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(messageJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(messageJButton)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addComponent(messageJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(backJButton)
                        .addGap(213, 213, 213)
                        .addComponent(addJButton)
                        .addGap(336, 336, 336))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(countryJLabel1)
                                .addComponent(stateNameJLabel)
                                .addComponent(cityJLabel)
                                .addComponent(enterpriseJLabel))
                            .addGap(99, 99, 99)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(countryJComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(stateNameJComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cityJComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(enterpriseJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(enterpriseIDJLabel)))
                            .addGap(83, 83, 83))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 649, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(42, 42, 42))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(headingJLabel)
                            .addGap(258, 258, 258)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headingJLabel)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(countryJComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(countryJLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stateNameJComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stateNameJLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityJComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cityJLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterpriseJLabel)
                    .addComponent(enterpriseJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(enterpriseIDJLabel))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addJButton)
                        .addComponent(backJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(messageJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(105, 105, 105))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void countryJComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countryJComboBox1ActionPerformed

        NetworkCountries nc = (NetworkCountries) countryJComboBox1.getSelectedItem();
        if (nc != null) {
            populateStateComboBox(nc);
        }
    }//GEN-LAST:event_countryJComboBox1ActionPerformed

    private void stateNameJComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateNameJComboBox1ActionPerformed

        NetworkStates ns = (NetworkStates) stateNameJComboBox1.getSelectedItem();
        if (ns != null) {
            populateCityComboBox(ns);
        }
    }//GEN-LAST:event_stateNameJComboBox1ActionPerformed

    private void cityJComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityJComboBox1ActionPerformed

        NetworkCities nc = (NetworkCities) cityJComboBox1.getSelectedItem();
        if (nc != null) {
            populateEnterprise(nc);
        }
    }//GEN-LAST:event_cityJComboBox1ActionPerformed

    private void enterpriseJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterpriseJComboBoxActionPerformed
        Enterprise e = (Enterprise) enterpriseJComboBox.getSelectedItem();
        if (e != null) {
            enterpriseIDJLabel.setText(String.valueOf(e.getOrganizationID()));
           populateDoctors(e);
           receiverEnterprise = e;
           

        }
    }//GEN-LAST:event_enterpriseJComboBoxActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed
        
        int selectedRow = manageDoctorsJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        Doctor receiverDoctor = (Doctor)manageDoctorsJTable.getValueAt(selectedRow,0);
        messageJPanel.setVisible(true);
       
        
    }//GEN-LAST:event_addJButtonActionPerformed

    private void messageJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = manageDoctorsJTable.getSelectedRow();
        Doctor receiverDoctor = (Doctor)manageDoctorsJTable.getValueAt(selectedRow,0);
         String message = messageJTextField.getText();
        if("".equals(message)){
            JOptionPane.showMessageDialog(null, "Please write a message to the doctor");
            return;
        }
        ReferredDoctorWorkRequest rdwr = new ReferredDoctorWorkRequest();
        rdwr.setMessage(message);
        rdwr.setPatient(patient);
        rdwr.setSender(doctor);
        rdwr.setReceiver(receiverDoctor);
        rdwr.setSenderEnterprise(enterprise);
        rdwr.setReceiverEnterprise(receiverEnterprise);
        rdwr.setEncounterList(encounterList);
        rdwr.setResolveDate(new Date());
        rdwr.setStatus(receiverDoctor.getFirstName()+" has been assigned to the patient- "+ patient.getFirstName());
        doctor.getWorkQueue().getWorkRequestList().add(rdwr);
        receiverDoctor.getWorkQueue().getWorkRequestList().add(rdwr);
        patient.getWorkQueue().getWorkRequestList().add(rdwr);
        patient.setReferredDoctor(receiverDoctor);
        patient.setReferredDoctorEnterprise(receiverEnterprise);
        messageJPanel.setVisible(false);
    }//GEN-LAST:event_messageJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JComboBox cityJComboBox1;
    private javax.swing.JLabel cityJLabel;
    private javax.swing.JComboBox countryJComboBox1;
    private javax.swing.JLabel countryJLabel1;
    private javax.swing.JLabel enterpriseIDJLabel;
    private javax.swing.JComboBox enterpriseJComboBox;
    private javax.swing.JLabel enterpriseJLabel;
    private javax.swing.JLabel headingJLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable manageDoctorsJTable;
    private javax.swing.JButton messageJButton;
    private javax.swing.JPanel messageJPanel;
    private javax.swing.JTextField messageJTextField;
    private javax.swing.JComboBox stateNameJComboBox1;
    private javax.swing.JLabel stateNameJLabel;
    // End of variables declaration//GEN-END:variables
}
